#!/usr/bin/env zsh

set -e
set -u
set -o pipefail

source $DOTFILES_PATH/bin/lib/util.zsh

cmdname=$(basename $0)
usage() {
  print "Usage: $cmdname <via_host> <hostname>" >&2
}

if [[ $# -ge 1 ]]
then
  if [[ "$1" = "--help" || "$1" = "-h" ]]
  then
      usage
      exit 0
  fi
fi

if [ $# -ne 2 ]
then
  print "Invalid number of arguments." >&2
  usage
  exit 2
fi

via_host="$1"
hostname="$2"



# Update nar-hash of dotfiles repository
nix flake lock --update-input dotfiles "path:$MACHINES_PATH"


readonly nix=(nix --log-format bar-with-logs)

readonly system_installable="path:$MACHINES_PATH#nixosConfigurations.$hostname.config.system.build.toplevel"
readonly installer="path:$MACHINES_PATH#machine-manager.installers.$hostname"


local_temp_dir=$(mktemp --tmpdir --directory install-$hostname.XXXXXXXXXX)
trap "rm -rf $local_temp_dir" EXIT INT HUP TERM


if ! ssh -o VisualHostKey=yes root@$via_host true
then
  print "Cannot connect to host '$via_host'" >&2
  exit 1
fi

if ! nix store ping --store ssh://root@$via_host
then
  print "Cannot connect to nix store on '$via_host'" >&2
  exit 1
fi

# Generate config file
local_config_file=$local_temp_dir/config
$nix run $installer.configure > $local_config_file

# Copy 'format' binary to target host
$nix copy --to ssh://root@$via_host $installer.format
readonly format_helper=$($nix path-info $installer.format)

remote_temp_dir=$(ssh root@$via_host mktemp --tmpdir --directory install-$hostname.XXXXXXXXXX)
# Copy install-helper and config
scp -r $local_temp_dir/* root@$via_host:$remote_temp_dir/
scp $DOTFILES_PATH/bin/message root@$via_host:$remote_temp_dir/

ssh root@$via_host "$remote_temp_dir/message" &

# -t: Force pseudo-terminal allocation
ssh -t root@$via_host "$format_helper/bin/format" "$remote_temp_dir/config" "$remote_temp_dir/output.json"
scp "root@$via_host:$remote_temp_dir/output.json" "$MACHINES_PATH/machines/$hostname/install-result.json"

print_info "Gathering hardware information..."
scp root@$via_host:/mnt/etc/nixos/hardware-configuration.nix "$MACHINES_PATH/machines/$hostname/"

print_info "Evaluating target system configuration..."
$nix path-info --json "$system_installable" | jq --raw-output ".[0].path" | read nixos_config_path

print_info "Deploying target system configuration..."
$nix copy --substitute-on-destination --no-check-sigs --to "ssh://root@$via_host?remote-store=/mnt" $system_installable

print_info "Activating target system configuration..."
#ssh root@$via_host "nixos-install --system $nixos_config_path && sync"
ssh root@$via_host '
  print "Setting system profile" >&2 &&
  nix-env --store /mnt --profile /mnt/nix/var/nix/profiles/system --set '$nixos_config_path' &&
  print "Creating /etc/NIXOS" >&2 &&
  mkdir -m 0755 -p "/mnt/etc" &&
  touch "/mnt/etc/NIXOS" &&
  print "" >&2 &&
  print "Linking mtab for grub" >&2 &&
  ln -sfn /proc/mounts /mnt/etc/mtab &&
  print "Installing bootloader" >&2 &&
  nixos-enter --root /mnt -c "NIXOS_INSTALL_BOOTLOADER=1 '$nixos_config_path'/bin/switch-to-configuration boot" &&
  sync
  '

ssh root@$via_host mkdir --mode u=rwx,g=,o= --parents /mnt/etc/secrets/passwords

# TODO: get host-specific password
#scp -r notThePassword root@$via_host:/mnt/etc/secrets/passwords/root
#scp -r notThePassword root@$via_host:/mnt/etc/secrets/passwords/jens
print_warning "Not deploying passwords"

print_info "Installation completed"
